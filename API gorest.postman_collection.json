{
	"info": {
		"_postman_id": "aa0a2130-7dbd-4a6a-af6b-a5d1cc97f945",
		"name": "API gorest",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "45408288",
		"_collection_link": "https://marcelo-4353783.postman.co/workspace/Projeto-Final~390d69ac-f2ad-4652-a6c0-dbd7770e67c3/collection/45408288-aa0a2130-7dbd-4a6a-af6b-a5d1cc97f945?action=share&source=collection_link&creator=45408288"
	},
	"item": [
		{
			"name": "Users",
			"item": [
				{
					"name": "Criar novo User",
					"item": [
						{
							"name": "POST - Criar User",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.iterationData.get(\"user_name\")\r",
											"pm.iterationData.get(\"user_gender\")\r",
											"pm.iterationData.get(\"user_email\")\r",
											"pm.iterationData.get(\"user_status\")"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"{{user_name}}\",\r\n    \"gender\": \"{{user_gender}}\",\r\n    \"email\": \"{{user_email}}\",\r\n    \"status\": \"{{user_status}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url_base}}users",
									"host": [
										"{{url_base}}users"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Listar User",
					"item": [
						{
							"name": "GET - Todos Users",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url_base}}users",
									"host": [
										"{{url_base}}users"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET - Buscar user especifico",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url_base}}users/{{id_user}}",
									"host": [
										"{{url_base}}users"
									],
									"path": [
										"{{id_user}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Editar User",
					"item": [
						{
							"name": "PUT-Editar User",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.iterationData.get(\"user_name_edit\")\r",
											"pm.iterationData.get(\"user_status_edit\")"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"{{user_name_edit}}\",\r\n    \"status\": \"{{user_status_edit}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url_base}}users/{{id_user}}",
									"host": [
										"{{url_base}}users"
									],
									"path": [
										"{{id_user}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Excluir User",
					"item": [
						{
							"name": "DELETE - Deletar User",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{url_base}}users/{{id_user}}",
									"host": [
										"{{url_base}}users"
									],
									"path": [
										"{{id_user}}"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "f4488634bbfb0c42ccb786ab2d164f41b0b6f8820715f7be77f1f36f28a1c6a1",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					"if (pm.request.method == 'GET' || pm.request.method == 'PUT') {\r",
					"    pm.test(\"Status code is 200\", function () {\r",
					"        pm.response.to.have.status(200);\r",
					"    });\r",
					"\r",
					"    pm.test(\"Status code name is OK\", function () {\r",
					"        pm.response.to.have.status(\"OK\");\r",
					"    });\r",
					"}\r",
					"\r",
					"if (pm.request.method == 'GET' || pm.request.method == 'POST') {\r",
					"    pm.test(\"Response time is less than 2000ms\", function () {\r",
					"        pm.expect(pm.response.responseTime).to.be.below(3000);\r",
					"    });\r",
					"}\r",
					"\r",
					"if (pm.request.method == 'POST') {\r",
					"    pm.test(\"Successful POST request\", function () {\r",
					"        pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
					"    });\r",
					"\r",
					"    pm.test(\"Status code name is Created\", function () {\r",
					"        pm.response.to.have.status(\"Created\");\r",
					"    });\r",
					"\r",
					"    if (pm.info.requestName == 'POST - Criar User') {\r",
					"        let responseJson = pm.response.json();\r",
					"        if (responseJson && responseJson.id) {\r",
					"            pm.environment.set(\"id_user\", responseJson.id);\r",
					"        } else {\r",
					"            console.log(\"Erro: ID do usuário não encontrado na resposta\");\r",
					"        }\r",
					"    }\r",
					"}\r",
					"\r",
					"if (pm.request.method == 'DELETE') {\r",
					"    pm.test(\"Status code name is No Content\", function () {\r",
					"        pm.response.to.have.status(\"No Content\");\r",
					"    });\r",
					"\r",
					"    pm.test(\"Status code is 204\", function () {\r",
					"        pm.response.to.have.status(204);\r",
					"    });\r",
					"}\r",
					""
				]
			}
		}
	]
}